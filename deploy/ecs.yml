AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS Fargate Auto Scaling Web Server with RDS"

Parameters:
  StackName:
    Type: String

Resources:
  BackendRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${StackName}-backend
  FrontendRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${StackName}-frontend 

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AWS::StackName
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SecretsAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !ImportValue
                  Fn::Sub: ${StackName}-rds-secret

  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Security Group
      VpcId: !ImportValue
          Fn::Sub: ${StackName}-vpc-id
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  BackendTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      Family: BackendAPI
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: X86_64
      TaskRoleArn: !GetAtt TaskRole.Arn
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: backend-server
          Image: !Sub ${BackendRepository.RepositoryUri}:latest
          Environment:
            - Name: DB_SECRET
              Value: !ImportValue
                Fn::Sub: ${StackName}-rds-secret
            - Name: DB_ENDPOINT
              Value: !ImportValue
                Fn::Sub: ${StackName}-rds-endpoint
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${StackName}/ecs-webapp
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
              awslogs-create-group: true
              mode: non-blocking
              max-buffer-size: "1m"

  BackendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref BackendTask
      LaunchType: FARGATE
      PropagateTags: SERVICE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue
                Fn::Sub: ${StackName}-subnet-1
            - !ImportValue
                Fn::Sub: ${StackName}-subnet-2
          SecurityGroups:
            - !Ref EcsSecurityGroup
          AssignPublicIp: ENABLED
      LoadBalancers:
        - TargetGroupArn: !ImportValue
            Fn::Sub: "${StackName}-backend-alb-tg-arn"
          ContainerName: backend-server
          ContainerPort: 80

  FrontendTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      Family: FrontendWebApp
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: X86_64
      TaskRoleArn: !GetAtt TaskRole.Arn
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: frontend-server
          Image: !Sub ${FrontendRepository.RepositoryUri}:latest
          Environment:
            - Name: DB_SECRET
              Value: !ImportValue
                Fn::Sub: ${StackName}-rds-secret
            - Name: DB_ENDPOINT
              Value: !ImportValue
                Fn::Sub: ${StackName}-rds-endpoint
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${StackName}/ecs-webapp
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
              awslogs-create-group: true
              mode: non-blocking
              max-buffer-size: "1m"

  FrontendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref FrontendTask
      LaunchType: FARGATE
      PropagateTags: SERVICE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue
                Fn::Sub: ${StackName}-subnet-1
            - !ImportValue
                Fn::Sub: ${StackName}-subnet-2
          SecurityGroups:
            - !Ref EcsSecurityGroup
          AssignPublicIp: ENABLED
      LoadBalancers:
        - TargetGroupArn: !ImportValue
            Fn::Sub: "${StackName}-frontend-alb-tg-arn"
          ContainerName: frontend-server
          ContainerPort: 80
